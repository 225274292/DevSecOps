pipeline {
  agent any

  tools { nodejs 'Node20-LTS' }
  options { timestamps() }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/225274292/DevSecOps.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        bat 'npm install'
      }
    }

    stage('Download Snyk CLI') {
      steps {
        bat 'powershell -NoProfile -ExecutionPolicy Bypass -Command "Invoke-WebRequest -UseBasicParsing -Uri https://downloads.snyk.io/cli/latest/snyk-win.exe -OutFile snyk.exe"'
        bat 'dir snyk.exe'
      }
    }

    stage('Snyk Auth') {
      steps {
        withCredentials([string(credentialsId: 'SNYK_TOKEN', variable: 'SNYK_TOKEN')]) {
          bat '.\\snyk.exe auth %SNYK_TOKEN%'
        }
      }
    }

    stage('Run Tests (Snyk)') {
      steps {
        bat '.\\snyk.exe test || exit /b 0'
      }
    }

    stage('Generate Coverage Report') {
      steps {
        catchError(buildResult: 'SUCCESS', stageResult: 'UNSTABLE') {
          bat 'npm run coverage || (if not exist coverage mkdir coverage & echo TN> coverage\\lcov.info)'
        }
      }
    }

    stage('NPM Audit (Security Scan)') {
      steps {
        bat 'npm audit || exit /b 0'
      }
    }
  }

  post {
    success {
      emailext(
        subject: "[SUCCESS] ${env.JOB_NAME} #${env.BUILD_NUMBER}",
        to: "sudhamapippalapalli@gmail.com",
        mimeType: 'text/html',
        body: """<p>Build succeeded.</p>
                 <p><b>Job:</b> ${env.JOB_NAME}<br/>
                 <b>Build:</b> #${env.BUILD_NUMBER}<br/>
                 <b>Commit:</b> ${env.GIT_COMMIT}</p>
                 <p><a href="${env.BUILD_URL}">Open build</a></p>"""
      )
    }
    failure {
      emailext(
        subject: "[FAILED] ${env.JOB_NAME} #${env.BUILD_NUMBER}",
        to: "sudhamapippalapalli@gmail.com",
        mimeType: 'text/html',
        attachLog: true,
        body: """<p>Build failed.</p>
                 <p><b>Job:</b> ${env.JOB_NAME}<br/>
                 <b>Build:</b> #${env.BUILD_NUMBER}</p>
                 <p><a href="${env.BUILD_URL}console">Console log</a></p>"""
      )
    }
    always {
      archiveArtifacts artifacts: 'coverage/lcov.info', allowEmptyArchive: true
    }
  }
}
